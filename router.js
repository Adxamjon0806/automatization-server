import { Router } from "express";
import fs from "fs";
import PizZip from "pizzip";
import Docxtemplater from "docxtemplater";
import { __dirname } from "./index.js";
import { abonentTarrifDatas, tarrifDatas } from "./emptyTables.js";
import { getCounterValue, setCounterValue } from "./counterLogic.js";
import { sendDocumentToFirst, sendTextToGroup } from "./botSendingFunc.js";

const router = new Router();

let isLocked = false;
const waitForUnlock = async () => {
  while (isLocked) {
    await new Promise((resolve) => setTimeout(resolve, 10)); // –∂–¥—ë–º, –ø–æ–∫–∞ —Ñ–∞–π–ª –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è
  }
};

router.post("/new-agreement", async (req, res) => {
  console.log("üü° 1 ‚Äî –º–∞—Ä—à—Ä—É—Ç /new-agreement –≤—ã–∑–≤–∞–Ω");
  try {
    await waitForUnlock(); // –∂–¥—ë–º, –ø–æ–∫–∞ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å –∑–∞–∫–æ–Ω—á–∏—Ç –∑–∞–ø–∏—Å—å
    isLocked = true;
    console.log("üü¢ 2 ‚Äî –ø–æ—Å–ª–µ waitForUnlock");

    const count = getCounterValue();
    console.log("üü¢ 3 ‚Äî count =", count);
    let tarrifsTotal = 0;
    let abonentTarrifsTotal = 0;
    const datas = req.body;
    console.log("üü¢ 4 ‚Äî –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:", datas.companyName);
    const day = new Date(datas.date).getDate();
    const month = new Date(datas.date).getMonth() + 1;

    const template = fs.readFileSync("–î–æ–≥–æ–≤–æ—Ä–î–ª—è–°–µ—Ä–≤–µ—Ä–∞.docx", "binary");
    console.log("üü¢ 5 ‚Äî —à–∞–±–ª–æ–Ω –ø—Ä–æ—á–∏—Ç–∞–Ω");
    const zip = new PizZip(template);

    const doc = new Docxtemplater(zip, {
      paragraphLoop: true,
      linebreaks: true,
      delimiters: { start: "[[", end: "]]" },
    });

    if (datas.tarrifs.length > 0) {
      for (let i = 0; i < datas.tarrifs.length; i++) {
        const element = datas.tarrifs[i];
        tarrifsTotal += element.totalPrice;
      }
    } else {
      tarrifsTotal = "";
    }
    if (datas.abonentTarrifs.length > 0) {
      for (let i = 0; i < datas.abonentTarrifs.length; i++) {
        const element = datas.abonentTarrifs[i];
        abonentTarrifsTotal += element.totalPrice;
      }
    } else {
      abonentTarrifsTotal = "";
    }

    const data = {
      ...datas,
      count,
      directorName: datas.directorName
        ? datas.directorName
        : "__________________________________________________",
      directorNameBottom: datas.directorName ? datas.directorName : "",
      address: datas.address ? `–ê–¥—Ä–µ—Å: ${datas.address}` : "",
      phone: datas.phone ? `–¢–µ–ª–µ—Ñ–æ–Ω: ${datas.phone}` : "",
      account: datas.account ? `–†/—Å: ${datas.account}` : "",
      bank: datas.bank ? `–ë–∞–Ω–∫: ${datas.bank}` : "",
      nfo: datas.nfo ? `–ú–§–û: ${datas.nfo},` : "",
      okef: datas.okef ? `–û–ö–≠–î: ${datas.okef}` : "",
      day: day < 10 ? "0" + day : day,
      month: month < 10 ? "0" + month : month,
      tarrifs: datas.tarrifs.length > 0 ? datas.tarrifs : tarrifDatas,
      abonentTarrifs:
        datas.abonentTarrifs.length > 0
          ? datas.abonentTarrifs
          : abonentTarrifDatas,
      tarrifsTotal,
      abonentTarrifsTotal,
    };

    doc.render(data);

    const buffer = doc.getZip().generate({ type: "nodebuffer" });

    const filePath = "./output.docx";
    fs.writeFileSync(filePath, buffer);
    console.log("üü¢ 6 ‚Äî —Ñ–∞–π–ª –∑–∞–ø–∏—Å–∞–Ω:", filePath);

    await sendDocumentToFirst(filePath, datas, count);
    console.log("üü¢ 7 ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞");
    await sendTextToGroup(datas, count);
    console.log("üü¢ 8 ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞");

    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    res.setHeader("Content-Disposition", "attachment; filename=output.docx");
    res.setHeader(
      "Content-Type",
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    );

    res.send(buffer);
    console.log("üü¢ 9 ‚Äî –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");

    setCounterValue(count + 1);
  } catch (e) {
    console.error("Error at creating new agreement route", e);
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –∫–ª–∏–µ–Ω—Ç—É, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –µ—â–µ –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
    if (!res.headersSent) {
      res.status(500).json({
        error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞",
        message: e.message,
      });
    }
  } finally {
    isLocked = false; // —Å–Ω–∏–º–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    console.log("üü£ 10 ‚Äî —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ");
  }
});

export default router;
